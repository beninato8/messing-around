from geopy.geocoders import Nominatim
import requests
import re

from bs4 import BeautifulSoup
from tqdm import tqdm
from time import sleep

geolocator = Nominatim(user_agent="traderjoes")

html = requests.get('https://locations.traderjoes.com/').text

soup = BeautifulSoup(html, 'html.parser')

soup = soup.find('div', {'id':'content'})

base = 'https://locations.traderjoes.com/'

locations = []

def state_to_city(state_url):
    # print(state_url, f'{100*((723-len(locations))/723):.2f}%')
    out = []
    html = requests.get(state_url).text
    soup = BeautifulSoup(html, 'html.parser')
    soup = soup.find('div', {'id':'content'})
    for x in soup.find_all('a', {'href':re.compile(r'https://locations\.traderjoes\.com/.+')}):
        url = f'{x["href"].replace("../", "")}'
        for location in city_to_locations(url):
            out.append(location)
    return out

def city_to_locations(city_url):
    out = []
    html = requests.get(city_url).text
    soup = BeautifulSoup(html, 'html.parser')
    soup = soup.find('div', {'id':'content'})
    for x in soup.find_all('div', {'class':'address-left'}):
        addr = []
        for span in x.find_all('span'):
            if all('toUpperCase' not in y for y in span) and not any(re.match(r'\d{3}\-\d{3}\-\d{4}', y) for y in span):
                addr += [span.contents[0]]
        out.append(addr)
    return out

def location_to_coords(loc):
    # print(loc)
    # exit()
    street = ' '.join(loc)
    # print(street)
    street = re.sub(r'(, )?Suite \d+[, ]*', ' ', street)
    # exit()
    location = get_location(street, '', '')
    try:
        # print(location)
        return (location.latitude, location.longitude)
    except Exception as e:
        return ()

def get_location(street, city, state):
    try:
        location = geolocator.geocode(f"{street} {city} {state}")
    except Exception as e:
        sleep(1)
        print(f'error on {street} {city} {state}')
        return get_location(street, city, state)
    return location

def scrape_it():
    lnx = []
    for x in tqdm(soup.find_all('a', {'href':re.compile(r'https://locations\.traderjoes\.com/.+')})):
        url = f'{x["href"]}'
        lnx += [url]
        for location in state_to_city(url):
            locations.append(location_to_coords(location))
            # exit()
    # return lnx

# scrape_it()

# for x in locations:
#     print(x)

# exit()

coords = [(33.4465102, -86.7296304),
(34.74820895, -92.4016242189427),
(33.3068721366259, -111.75459558239),
(33.639277, -112.2264979),
(33.3790975, -111.787652416667),
(),
(33.3040314, -111.9944973),
(33.5831706, -111.9790463),
(33.5070394, -112.0378334),
(34.5487019, -112.4053084),
(),
(33.5290131, -111.9274556),
(33.8975888, -112.6611608),
(33.36175165, -111.912441),
(32.2372851, -110.8586091),
(32.2835138, -110.944736549289),
(32.24979955, -110.890918649536),
(34.14648905, -118.75657730568),
(37.7596511, -122.257747),
(33.5773864, -117.724524340882),
(35.12569125, -120.594052799424),
(35.354465409396, -119.094989657718),
(37.8717025, -122.2732154),
(33.909876, -117.865220131626),
(37.9616004, -121.7239354),
(34.1748916946284, -118.299235652744),
(34.1557995642125, -118.643405817067),
(),
(),
(),
(33.1277103, -117.2568662),
(37.6854582, -122.073035553233),
(),
(33.8689672, -118.0580377),
(34.2579293061224, -118.579723918367),
(39.7607147860057, -121.846294408322),
(33.983068, -117.7324691),
(32.6481708, -116.96529),
(),
(36.8083375, -119.7271536),
(37.9797454986066, -122.057517933287),
(37.9384565185468, -122.024962615494),
(33.8131807, -117.5046237),
(33.6362443639192, -117.925876589634),
(33.9895417, -118.4009267),
(34.0227247, -118.3952868),
(),
(37.8230234, -122.0033266),
(38.5464330189575, -121.761443179422),
(34.13921955, -118.200377244032),
(32.762947, -117.073128),
(38.405832, -121.417759333333),
(37.838571, -122.294645),
(33.04707685, -117.255796586748),
(34.172185562702, -118.517185476896),
(33.1010540742131, -117.074077082506),
(38.2641302, -122.053001940751),
(38.6403391, -121.271597),
(),
(37.5435716, -121.9860846),
(36.8546477857143, -119.7892605),
(34.1598097, -118.2543949),
(34.4413463067227, -119.82439444958),
(34.2723835714286, -118.502098714286),
(37.9393174259114, -122.515929880864),
(33.863287, -118.392491),
(33.6807424, -118.0017526),
(33.6642668, -117.9538367),
(33.7178585714286, -118.050193142857),
(33.647877924049, -117.835010524196),
(33.706157, -117.788425897545),
(33.7072453, -117.7508239),
(34.2000835, -118.188376374717),
(37.890779, -122.127369),
(33.609223631129, -117.701284084542),
(33.523356, -117.6856639),
(),
(32.8657542, -117.231917034274),
(32.779306, -117.00561),
(33.7112352637318, -116.295067),
(37.6791382745248, -121.78198711655),
(33.7967648163265, -118.125211653061),
(33.8195199, -118.1892841),
(33.7401587, -118.0938317),
(37.3371572, -122.0675117),
(),
(34.0697146938776, -118.344122469388),
(34.0638392, -118.3613924),
(34.0721631, -118.3775515),
(34.0232096, -118.4763959),
(34.1077039, -118.271646306863),
(34.0975955, -118.3652597),
(34.0267544751997, -118.284063538273),
(34.030118, -118.421648),
(33.9603204, -118.3962076),
(34.0622876, -118.4439126),
(37.2445654, -121.9586149),
(33.8874193, -118.3925128),
(),
(),
(37.4512178, -122.1832816),
(37.6038042, -122.3959012),
(33.6261823, -117.6515258),
(37.6861524630279, -121.049714077599),
(34.1380129, -118.0121045),
(36.5967316842105, -121.894088052632),
(34.2069485, -118.233181799229),
(37.1311833, -121.638258861327),
(37.402176, -122.1105251),
(38.3232571100784, -122.307446032885),
(),
(38.0973712, -122.5647547),
(37.810224477618, -122.245487182764),
(37.8446077, -122.2517993),
(33.183313605876, -117.331928263112),
(33.8231558, -117.836454226268),
(36.6063492750965, -121.921882560338),
(34.6005550485721, -118.147736925514),
(33.7274993, -116.3962286),
(37.439213, -122.15835),
(34.1540267295914, -118.077948166976),
(34.134916, -118.14723),
(),
(34.14006515, -118.132870648395),
(38.2500174085382, -122.627146374852),
(37.9948032939591, -122.285831538615),
(37.6969236, -121.8770007),
(34.137711, -117.575749),
(33.7492956, -118.4066875),
(33.7564843, -118.311750143213),
(33.6382128, -117.6085934),
(40.5929713, -122.3583849),
(34.0605852, -117.1811961),
(33.8173116284684, -118.386113779457),
(33.95508355, -117.390648460082),
(38.7462846, -121.274931364338),
(38.5604236, -121.444897833923),
(38.6180690204082, -121.401040714286),
(),
(33.4577478, -117.6510419),
(32.96110705, -117.191225371698),
(32.7661721, -117.1552299),
(32.982014, -117.0749868),
(32.7485412991866, -117.154436706707),
(32.8000446499511, -117.240091970223),
(32.735999, -117.21754),
(32.7718965, -117.0702836),
(32.9143011, -117.1149921),
(34.1036077, -117.8212912),
(37.78339835, -122.447842533317),
(37.7709988, -122.4077368),
(37.7907686, -122.4179305),
(37.8054807, -122.4137896),
(37.785398, -122.4056288),
(37.726601, -122.4762084),
(37.31176485, -122.030924087461),
(37.3410206, -121.9095071),
(),
(),
(33.4964718513411, -117.662713215962),
(35.2788584, -120.6645421),
(37.55456445, -122.302601700077),
(37.5354941, -122.2984371),
(37.969678, -122.5165256),
(),
(34.439024, -119.729096),
(34.4236736734694, -119.681563020408),
(34.4284056, -118.5381487),
(36.9745373, -122.02479114644),
(34.9524532, -120.4181158),
(),
(),
(38.41750185, -122.711999758369),
(38.4728655382563, -122.730964384301),
(34.157688, -118.440907),
(34.279078, -118.7382218),
(),
(34.1152989, -118.162959501293),
(38.0096192374101, -121.320146863309),
(34.1429858, -118.3933469),
(37.3679656, -122.0358812),
(33.5356857, -117.1467323),
(35.54195745, -120.715150476283),
(34.182177467657, -118.953357914147),
(),
(),
(33.85226315, -118.353241280925),
(33.8045981, -118.3498543),
(33.7461158, -117.8063629),
(34.2594977954411, -119.211278923171),
(34.2714336, -119.2489507),
(37.893581, -122.061334),
(),
(34.2067764, -118.6234309),
(34.0880565, -118.3796094),
(34.0907765, -118.3659294),
(34.1629855517992, -118.827048758763),
(),
(34.1684613, -118.6041536),
(33.8887026, -117.80377),
(40.02022865, -105.257819194113),
(38.906799530509, -104.816692121396),
(39.7269876, -104.9827267),
(39.7283178571429, -104.940499530612),
(39.7289721428571, -104.940500755102),
(),
(),
(39.6099781, -105.0343112),
(41.3925761, -73.5225355),
(),
(41.1830926, -73.2533157),
(),
(41.271041087344, -72.996075225768),
(41.1057516546638, -73.5481435230779),
(41.7324058, -72.7312188),
(41.1398518, -73.3519236),
(),
(38.9161261, -77.0322113),
(38.9041925, -77.0531294),
(38.8849142, -76.9958375),
(38.9074588, -77.0005857),
(),
(26.3422948571429, -80.0863471836735),
(26.0930247, -80.2496633),
(),
(26.1370669, -80.1360112),
(),
(30.181461, -81.6285086),
(),
(25.6844769, -80.312604),
(25.7918117, -80.1421582),
(26.2008776, -81.8001455),
(),
(26.8446207959184, -80.0739279795918),
(26.0060034, -80.3108133),
(),
(),
(30.503151, -84.2501789120334),
(),
(),
(28.5980428708417, -81.3652292168106),
(33.9244296, -83.4395666),
(),
(33.8408678, -84.3751232),
(),
(),
(34.05939, -84.3796574),
(33.878149, -84.379787),
(41.6829955, -91.5648083),
(41.561815, -93.795463),
(43.6130214, -116.20380567653),
(),
(42.1534464, -88.3395735),
(42.1148179, -87.9837959),
(41.8639356, -88.3250051),
(41.9499896, -87.6751163937603),
(41.93243365, -87.6462532747609),
(41.9146551, -87.6551388),
(41.8934915, -87.6262699),
(41.8676488, -87.6255861),
(41.7950637813814, -87.5881218422439),
(41.8097371836735, -87.9903022653061),
(42.0397986, -87.6800794741954),
(),
(42.075632, -87.7986758),
(),
(),
(42.255148, -87.9468637070472),
(41.7543725, -88.1407747),
(42.1501785018951, -87.8001136949098),
(41.8901882, -87.8047660522993),
(41.6181431, -87.8546535),
(42.0130500295617, -87.8325479007664),
(),
(),
(),
(38.9124389, -94.6359163),
(37.7162088, -97.2440388),
(38.0279702, -84.5107228),
(38.0279702, -84.5107228),
(),
(),
(30.4229094, -91.1535244),
(29.999608, -90.1175559),
(42.4824956, -71.4144956),
(42.3634369, -71.130034),
(42.4254014, -71.1884932),
(42.34838, -71.084239),
(42.35180085, -71.0473415062854),
(42.34190745, -71.1205232994221),
(42.4738185, -71.2116241156232),
(42.3582614, -71.11420365),
(42.3899301, -71.1433772),
(42.0860716, -71.2713164),
(42.2982818536239, -71.4234503394467),
(42.3578164, -72.5493630952817),
(42.1373797, -70.8418917),
(),
(),
(42.2926016584853, -71.2351045039235),
(42.5493386, -70.9545330882233),
(42.4836345, -71.0174970135732),
(42.2755993, -71.7511892),
(42.39435812, -71.08341776),
(42.3498486, -71.2194260116457),
(),
(38.9780282222222, -77.0909571818182),
(),
(39.3891559, -76.7360384),
(39.0910146, -77.1878251),
(),
(39.03009, -77.0060772),
(39.4112798, -76.619151),
(43.66183915, -70.2645601667797),
(42.2584463, -83.7129929),
(),
(42.3953724, -82.9028555),
(42.2709031919192, -85.650274040404),
(42.9124405675676, -85.5773203513513),
(42.4227365, -83.4336834343572),
(42.6817853, -83.1489602),
(42.474989, -83.1448766),
(44.8588480783813, -93.3327105954068),
(45.0940567547537, -93.4394611310495),
(44.9770639, -93.2577228),
(44.9705092, -93.438788),
(44.000736, -92.479761),
(45.057941, -93.1446188528353),
(44.9344763, -93.33746),
(44.9400998, -93.1466046),
(),
(38.6274673, -90.3412668710054),
(38.6447435, -90.5666870357448),
(38.671909, -90.4364479),
(38.601076, -90.4671342),
(38.9709572, -94.6072766),
(35.603164, -82.553278),
(35.7588143, -78.7813155),
(35.935235, -79.0253457),
(35.2120472794012, -80.8357468158159),
(35.33789052864, -80.75742114098),
(35.0796970345413, -80.816615176374),
(36.1303046842105, -79.8546305263158),
(35.82323545, -78.6217285571852),
(34.2113965172414, -77.8865225517241),
(36.0920412005049, -80.2811629838951),
(40.7409759654039, -96.6753552735121),
(41.2487013, -96.0213515),
(42.954205, -71.4771264),
(42.70819325, -71.4383560345052),
(43.0939915, -70.8017829),
(40.05893525, -74.1402796602315),
(40.5669701397946, -74.5596232096919),
(40.835386094657, -74.1473355605244),
(),
(40.8201020127944, -73.9775690542334),
(40.7880755610053, -74.3891707825969),
(40.753412902439, -74.0299277073171),
(),
(40.7244991, -74.3039205),
(40.4592098577762, -74.4687211039402),
(40.9819253, -74.086764),
(40.3385482, -74.6294027),
(),
(40.96127195, -74.2424510245142),
(40.6523482, -74.3499291311143),
(40.9926245384615, -74.0355243076923),
(35.1752083, -106.5428004),
(),
(35.6730721, -105.9531647),
(),
(36.0005709, -115.1065802),
(36.0696149, -115.0813114),
(36.2645867285085, -115.257201792695),
(),
(),
(39.478812, -119.7839896),
(40.68950635, -73.9928333119095),
(40.6914157, -73.982755),
(42.967537, -78.823457),
(42.71432, -73.8121337),
(40.8413376779661, -73.3066076949152),
(40.737659, -73.644938),
(41.0192548, -73.7980854),
(40.638786, -73.7023915),
(),
(40.9318645, -73.7494695),
(40.6537276470588, -73.5587837941177),
(40.7785184, -73.9822822),
(40.7418779, -73.9938343),
(40.7305374, -73.9810648),
(),
(40.7440283, -73.9790589),
(40.7256773, -74.0047511),
(40.7334209, -73.987875),
(40.7335574, -73.988259),
(40.7908664, -73.9692378),
(40.6253424, -73.6395654),
(40.7818792, -73.5015393),
(40.7111513, -73.8581219),
(43.1023491787719, -77.5380728119845),
(40.977987, -73.8021044),
(40.5898828, -74.1658008),
(43.049248, -76.12241),
(39.1867199, -84.4184481),
(40.04938195, -82.918029065625),
(40.1089624, -83.0910199),
(39.6894713523316, -84.1676890466321),
(41.4570218, -81.9509465),
(),
(35.537825, -97.5310906),
(36.10950555, -95.9760340749191),
(45.4880481, -122.798240450417),
(),
(45.4559803, -122.580662),
(44.5823600334011, -123.25858772507),
(),
(45.5365999, -122.869608442779),
(45.41347, -122.7429145),
(42.3436492, -122.881505),
(45.53470085, -122.620809047215),
(45.52608215, -122.695171563315),
(),
(44.8898513057469, -123.034217374492),
(40.0072587, -75.2865361180063),
(40.100684, -75.1257474),
(39.9175724, -75.3888769048441),
(),
(39.95404065, -75.1624497128432),
(39.9542212, -75.176133323693),
(40.459193, -79.9192342),
(),
(),
(),
(),
(41.7124488, -71.4873393),
(34.0200718, -80.97277295),
(34.8293977, -82.3055843),
(32.8047956, -79.8870990543398),
(35.0909747, -89.8011646),
(35.9271514, -84.0459196),
(),
(36.1051633, -86.8156551273712),
(30.395413, -97.75191),
(),
(),
(32.9508492, -96.802113924505),
(32.821921, -96.7897946),
(32.8148837, -96.7710622),
(32.8805932, -96.7723747325942),
(32.8506192, -96.8182348),
(32.7170061, -97.3854086),
(29.7392004, -95.4111693),
(29.7538359, -95.5010806),
(29.73538065, -95.5823966909392),
(),
(),
(33.0293634, -96.7929318),
(29.496725, -98.4780423995732),
(29.60930785, -98.4989999001391),
(32.9413628, -97.1293991508124),
(30.1763817, -95.5358217),
(40.6238866, -111.8540128),
(40.2764427, -111.6851676),
(40.7597822, -111.8727612),
(38.8110954, -77.0447977),
(38.8867204, -77.0947148),
(39.0503415, -77.4528963396665),
(38.8520518125, -77.1327384375),
(38.8388398639775, -77.4348222223131),
(),
(38.8409523877551, -77.2701959591837),
(),
(),
(37.1374355, -76.5193055),
(38.9670483870255, -77.3584609296519),
(37.1811669, -93.3565747709633),
(36.84887265, -76.0252299228734),
(),
(44.4638633, -73.1803995687517),
(47.6307777, -122.133639113803),
(47.6136522, -122.1847654),
(48.762185, -122.464044),
(47.460114, -122.331366840458),
(47.9101936543658, -122.221329735622),
(47.3169082, -122.3110514),
(47.5440469, -122.0519559),
(47.3600802, -122.1662616),
(47.7120175, -122.1807232),
(47.8198880993193, -122.316185653164),
(47.0330305357143, -122.940209571429),
(47.6745829172411, -122.129105840847),
(47.6138524, -122.0338685),
(47.6623463, -122.3745292),
(47.6070471, -122.3306224),
(47.6364752, -122.3567059),
(47.6626473, -122.317644),
(47.5686383, -122.3734779),
(47.7547708, -122.34328968898),
(),
(47.6290764, -117.3667945),
(47.708150795974, -117.411118145172),
(47.22308225, -122.538458572383),
(45.6197047, -122.5527812),
(43.0356596, -88.0701041480974),
(43.0649945, -89.4172848),
(43.1613464, -87.9118459)]

print(len([x for x in coords if x]))

import gmplot 

def center_geolocation(geolocations):
    lats = []
    lons = []
    for x in geolocations:
        if x:
          lats.append(x[0])
          lons.append(x[1])

    return (sum(lats)/len(lats), sum(lons)/len(lons))
center = center_geolocation(coords)
lats = [x[0] for x in coords if x]
lons = [x[1] for x in coords if x]
gmap3 = gmplot.GoogleMapPlotter(center[0], center[1], 4) 

# gmap3.scatter(lats, lons, color='blue', marker=False,size=20000 )
gmap3.heatmap(lats, lons, radius=20)
# gmap3.plot(lats, lons, 'cornflowerblue', edge_width = 2.5) 

gmap3.draw("/Users/Nicholas/GitHub/messing around/trader-joes/trader.html")
# print(soup.prettify())
